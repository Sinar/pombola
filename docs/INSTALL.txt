# INSTALL
#
# Pombola is mostly a standard Django project. There are some unusual
# dependencies that are noted below.

# The lines without a '#' at the start are commands to run on your command line


# WHERE TO PUT THE CODE
# 
# In addition to the downloaded code several other directories are needed for
# dynamic data such as the search indexes, uploaded images, various caches etc.
# 
# These extra directories are by default put alongside the folder containing the
# code. To keep these from getting mixed up with other directories on your
# computer we suggest you create a folder called pombola_root for them all to
# reside in.

mkdir pombola_root
cd pombola_root


# GETTING THE CODE
# 
# The code is available via github: https://github.com/mysociety/pombola

git clone https://github.com/mysociety/pombola.git

# on a Mac you could fetch the code using GitHub's client - use the 'Clone in
# Mac' button - http://mac.github.com/


# NON-PYTHON DEPENDENCIES

# There are some dependencies that need to be installed. Please see the
# 'conf/packages' file for details.

On a Debian Ubuntu instance, the following command should work (tested on Ubuntu Precise)

	grep -v '#' | sudo xargs apt-get install -y

You will then need to install the latest Elasticsearch from
	https://download.elasticsearch.org/elasticsearch/elasticsearch/

For example on Debian/Ubuntu:

	wget https://download.elasticsearch.org/elasticsearch/elasticsearch/elasticsearch-0.90.0.deb
	sudo dpkg -i elasticsearch-0.90.0.deb
	sudo service elasticsearch start

# DATABASES

# A Postgis enabled Postgres database is required

# create the database - assuming here that you're calling it 'pombola'

	createdb --owner pombola -T template_postgis pombola

On Ubuntu Precise you may need to create this template first:

	sudo su postgres
	createdb template_postgis
	psql -d template_postgis -f /usr/share/postgresql/9.1/contrib/postgis-1.5/postgis.sql
	psql -d template_postgis -f /usr/share/postgresql/9.1/contrib/postgis-1.5/spatial_ref_sys.sq


# CONFIGURATION FILES

# go to the pombola Django project
cd pombola

# copy config example and set values needed
cp conf/general.yml-example conf/general.yml
nano conf/general.yml


# PYTHON DEPENDENCIES AND DATABASE SETUP

# Most of this is done using the 'bin/prepare_environment.bash' script. This
# will create the virtual environment, install needed python dependencies and
# then set up the database

	bin/prepare_environment.bash

If this step fails, please consult TROUBLESHOOTING.md

# VIRTUALENV

# now that the environment has been created you need to enable it
source ../pombola-virtualenv/bin/activate


# START THE DEV SERVER

# The dev server will allow you to check that everything is working as expected.

./manage.py runserver

# don't forget to log in to the admin and change the entry in 'sites' to your
# machine's hostname and port



# Get Busy!

